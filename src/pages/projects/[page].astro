---
import { getCollection } from "astro:content";

import type { GetStaticPathsOptions } from "astro";

import Footer from "@/components/Footer.astro";
import Header from "@/components/Header.astro";
import ProjectCard from "@/components/project/ProjectCard.astro";
import Layout from "@/layouts/Layout.astro";

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const projects = await getCollection("project");
  return paginate(
    projects.sort((a, b) => a.id.localeCompare(b.id)),
    { pageSize: 4 },
  );
}

const { page } = Astro.props;
const { data: projects } = page;

const title = `Projects | Page ${page.currentPage}`;
---

<Layout title={title}>
  <Header>Projects</Header>
  <main>
    <h3>Page {page.currentPage} of {page.lastPage}</h3>
    <ul class="project-list | grid" role="list">
      {
        projects.map((project) => (
          <li class="project-list-item">
            <ProjectCard project={project} fullsize />
          </li>
        ))
      }
    </ul>
  </main>
  <Footer>
    {
      page.lastPage > 1 && (
        <nav>
          <a
            class="primary-selectable"
            href={page.url.prev}
            aria-disabled={page.currentPage === 1}
          >
            {`<`} Prev
          </a>
          <a
            class="primary-selectable"
            href={page.url.next}
            aria-disabled={page.currentPage === page.lastPage}
          >
            Next {`>`}
          </a>
        </nav>
      )
    }
  </Footer>
</Layout>

<style lang="scss">
  h3 {
    display: flex;
    align-items: center;
    gap: 1ch;
    margin-bottom: 1.5rem;
    padding-block: 0.675rem;

    font-size: 11px;
    font-family: var(--ff-pixelated);
    text-transform: uppercase;

    border-block: 1px dashed var(--color-text-subdued);
  }

  .project-list {
    --gutter: 1.125rem 1rem;
    --grid-min-item-size: 300px;

    margin-block: 1.5rem;
  }

  nav {
    display: flex;
    align-items: center;
    justify-content: center;
    padding-block: 1rem;
    gap: 2rem;

    a {
      font-family: var(--ff-pixelated);
      font-size: var(--fs-pixelated-small);
      text-transform: uppercase;

      &[aria-disabled="true"] {
        cursor: not-allowed;
        color: var(--color-text-secondary);
      }
    }
  }
</style>

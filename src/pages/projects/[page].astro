---
import { getCollection } from "astro:content";

import type { GetStaticPathsOptions } from "astro";

import Footer from "@/components/Footer.astro";
import Header from "@/components/Header.astro";
import ProjectCard from "@/components/project/ProjectCard.astro";
import Layout from "@/layouts/Layout.astro";

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const projects = await getCollection("project");
  return paginate(
    projects.sort((a, b) => a.id.localeCompare(b.id)),
    { pageSize: 4 },
  );
}

const { page } = Astro.props;
const { data: projects } = page;

const title = `Projects | Page ${page.currentPage}`;
---

<Layout title={title}>
  <Header>Projects</Header>
  <main>
    <h3 class="ff-pixelated fs-pixelated-small">
      Page {page.currentPage} of {page.lastPage}
    </h3>
    <ul class="grid">
      {
        projects.map((project) => (
          <li>
            <ProjectCard project={project} fullsize />
          </li>
        ))
      }
    </ul>
  </main>
  <Footer>
    {
      page.lastPage > 1 && (
        <nav class="ff-pixelated fs-small | navigation">
          <a
            class="hoverable"
            href={page.url.prev}
            aria-disabled={page.currentPage === 1}
          >
            {`<`} Prev
          </a>
          <a
            class="hoverable"
            href={page.url.next}
            aria-disabled={page.currentPage === page.lastPage}
          >
            Next {`>`}
          </a>
        </nav>
      )
    }
  </Footer>
</Layout>

<style lang="scss">
  h3 {
    margin-bottom: 1.5rem;
    padding-block: 15px;
    text-transform: uppercase;
    border-block: 1px dashed var(--color-text-subdued);
  }

  ul {
    --gutter: 1.125rem 1rem;
    --grid-min-item-size: 300px;

    margin-block: 1.5rem;
  }

  nav {
    gap: 2rem;
    padding-block: 0.75rem;
  }
</style>

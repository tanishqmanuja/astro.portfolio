---
import type { HTMLAttributes } from "astro/types";

import BrandLogo from "@/components/brand/BrandLogo.astro";
import { getBrandLink } from "@/components/brand/links";
import { hasIcon } from "@/components/brand/logos";
import { booleanCompare } from "@/utils/sorting";

interface Props extends HTMLAttributes<"section"> {
  stack: string[];
}

const { stack } = Astro.props;
---

{
  stack.length > 0 && (
    <section {...Astro.props}>
      <h3 aria-label="Tech Stack">[+] Tech Stack</h3>
      <ul class="stack | cluster">
        {stack
          .sort((a, b) => booleanCompare(hasIcon(a), hasIcon(b)))
          .map((brand, index) => (
            <li class="stack-item">
              <a class="primary-selectable" href={getBrandLink(brand)}>
                <BrandLogo brand={brand} size={12} />
                <span class="name">{brand}</span>
              </a>
              {index < stack.length - 1 && (
                <span class="separator" aria-hidden="true">
                  ,
                </span>
              )}
            </li>
          ))}
      </ul>
    </section>
  )
}

<style lang="scss">
  h3 {
    margin-top: 1.25rem;
    margin-bottom: var(--size-2);
    color: var(--color-amber);
    font-family: var(--ff-pixelated);
    font-size: var(--fs-pixelated-small);
    text-transform: uppercase;
  }

  .stack {
    gap: 0.25ch;
  }

  .stack-item {
    display: flex;
    align-items: center;
    gap: 0.25ch;
    text-transform: capitalize;

    a {
      display: flex;
      align-items: center;
      gap: 0.25ch;

      .name {
        margin-left: 0.5ch;
        margin-right: 0.25ch;
      }
    }
  }

  .separator {
    margin-right: 0.75ch;
    color: var(--color-barely-visible);
  }
</style>

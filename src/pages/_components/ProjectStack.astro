---
import { booleanCompare } from "@/utils/sorting";
import {
  STACK_ICON_MAP,
  STACK_LINK_MAP,
  type IconComponent,
} from "./utils/stack";

interface Props {
  stack: string[];
}

function getStackLink(stackItem: string): string {
  return STACK_LINK_MAP[stackItem.toLowerCase()];
}

function hasIcon(stackItem: string): boolean {
  return Object.keys(STACK_ICON_MAP).includes(stackItem.toLowerCase());
}

function getStackIcon(stackItem: string): [{ Component: IconComponent }] | [] {
  const Component = STACK_ICON_MAP[stackItem.toLowerCase()];
  if (!Component) {
    return [];
  }
  return [{ Component }];
}

const { stack } = Astro.props;
---

<h3 id="stack-title">[+] Tech Stack</h3>
<ul class="stack | cluster" aria-labelledby="stack-title">
  {
    stack
      .sort((a, b) => booleanCompare(hasIcon(a), hasIcon(b)))
      .map((item, index) => (
        <li class="stack-item">
          <a class="primary-selectable" href={getStackLink(item)}>
            {getStackIcon(item).map(({ Component }) => (
              <Component size="12" />
            ))}
            <span class="name">{item}</span>
          </a>
          {index < stack.length - 1 && (
            <span class="separator" aria-hidden="true">
              ,
            </span>
          )}
        </li>
      ))
  }
</ul>

<style lang="scss">
  h3 {
    margin-top: 1.25rem;
    margin-bottom: var(--size-2);
    color: var(--clr-amber);
    font-family: var(--ff-pixelated);
    font-size: var(--fs-pixelated-small);
    text-transform: uppercase;
  }

  .stack {
    gap: 0.25ch;
  }

  .stack-item {
    display: flex;
    align-items: center;
    gap: 0.25ch;
    text-transform: capitalize;

    a {
      display: flex;
      align-items: center;
      gap: 0.25ch;

      .name {
        margin-left: 0.5ch;
        margin-right: 0.25ch;
      }
    }
  }

  .separator {
    margin-right: 0.75ch;
    color: var(--clr-text-barely-visible);
  }
</style>

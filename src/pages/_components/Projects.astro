---
import { getCollection, type CollectionEntry } from "astro:content";

import ProjectCard from "@/components/project/ProjectCard.astro";
import ProjectCardHeader from "@/components/project/ProjectCardHeader.astro";
import Section from "@/components/Section.astro";
import { booleanCompare } from "@/utils/sorting";

const projects = await getCollection("project");

type Project = CollectionEntry<"project">;
const isFeatured = (project: Project) => project.data.isFeatured;
const alphabeticSort = (a: Project, b: Project) => a.id.localeCompare(b.id);
---

<Section title="Projects" featured>
  <ol>
    {
      projects
        .filter(isFeatured)
        .sort(alphabeticSort)
        .map((project, i) => (
          <li>
            <span class="marker">{i.toString().padStart(2, "0")}</span>
            <ProjectCard project={project} />
          </li>
        ))
    }
    <li>
      <span class="marker">++</span>
      <ProjectCardHeader
        slug="projects"
        title="All Projects"
        subtitle="Yes, there are more :)"
      />
    </li>
  </ol>
</Section>

<style lang="scss">
  ol {
    margin-top: 1rem;
    margin-left: 12px;
    display: flex;
    flex-direction: column;
    row-gap: 1.125rem;
  }

  li {
    display: grid;
    grid-template-columns: 24px 1fr;
    column-gap: 2ch;

    .marker {
      justify-self: center;
      padding-top: 1.5px;
      color: var(--clr-text-subdued);
      font-family: var(--ff-dotmatrix);
      font-weight: bold;
      white-space: nowrap;

      @media (prefers-reduced-motion: no-preference) {
        view-timeline-name: --item-timeline;
        animation-name: slide-fade-in;
        animation-fill-mode: both;
        animation-timeline: --item-timeline;
        animation-range: cover 0% cover 10%;
      }
    }
  }
</style>

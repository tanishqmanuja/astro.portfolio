---
import { getCollection, render } from "astro:content";

import Footer from "@/components/Footer.astro";
import Header from "@/components/Header.astro";
import ProjectDevelopers from "@/components/project/ProjectDevelopers.astro";
import ProjectInfoLine from "@/components/project/ProjectInfoLine.astro";
import ProjectTags from "@/components/project/ProjectTags.astro";
import ProjectTechStack from "@/components/project/ProjectTechStack.astro";
import ProjectComments from "@/components/ProjectComments.astro";
import Layout from "@/layouts/Layout.astro";
import { AUTHOR, GITHUB_USERNAME } from "@/site.config";
import { slugify } from "@/utils/slug";

export async function getStaticPaths() {
  const projects = await getCollection("projects");
  return projects.map((project, index, projects) => ({
    params: { project: slugify(project.slug) },
    props: {
      project,
      url: {
        prev: index === 0 ? undefined : `/${slugify(projects[index - 1].slug)}`,
        current: `/${slugify(project.slug)}`,
        next:
          index === projects.length - 1
            ? undefined
            : `/${slugify(projects[index + 1].slug)}`,
      },
    },
  }));
}

const { project, url } = Astro.props;
const { tags, developers, stack } = project.data;
const { Content } = await render(project);

const title = `${project.data.title} | ${AUTHOR}`;
const description = project.data.description;
const ogImage = {
  url: `${url.current}/og.png`,
  alt: `${project.data.title} by ${AUTHOR}`,
};
---

<Layout title={title} description={description} ogImage={ogImage}>
  <Header>{project.data.title}</Header>
  <main>
    <ProjectInfoLine project={project} />
    <ProjectTechStack stack={stack} />

    <section class="content | flow | fs-fluid-0">
      <Content />
    </section>

    {
      developers.filter(({ id }) => id !== GITHUB_USERNAME).length > 0 && (
        <ProjectDevelopers developers={developers} />
      )
    }
  </main>
  <Footer border="thin">
    <ProjectTags class="tags" tags={tags} />
    <nav class="ff-pixelated fs-small | navigation">
      <a class="hoverable" href={url.prev} aria-disabled={!url.prev}>
        {`<`} Prev
      </a>
      <a class="hoverable" href="/projects/1/">All Projects</a>
      <a class="hoverable" href={url.next} aria-disabled={!url.next}>
        Next {`>`}
      </a>
    </nav>
    <ProjectComments class="comments" />
  </Footer>
</Layout>

<style>
  main {
    padding-bottom: 1rem;
  }

  .tags {
    margin-block: 3rem 1rem;
  }

  nav {
    margin-block: 2rem 1rem;
    gap: 1.25rem;
    padding-block: 8px;
    border-block: 1px dashed var(--color-text-subdued);
  }

  .comments {
    margin-block: 2rem;
  }
</style>

<style>
  .content {
    --flow-space: 1.2em;
    margin-block: 1rem;

    h1::before {
      content: "#";
    }

    h2::before {
      content: "##";
    }

    h1::before,
    h2::before,
    h3::before {
      color: var(--color-barely-visible);
      padding-right: 1ch;
    }

    code {
      color: var(--color-amber);

      &::before,
      &::after {
        content: "`";
      }
    }

    ul {
      list-style-type: disc;

      :where(ul) {
        list-style-type: circle;
      }
    }

    ol {
      list-style-type: decimal;
    }

    ul,
    ol {
      list-style-position: outside;
      padding-inline-start: 18px;

      :where(ul, ol) {
        margin-block-start: 0;
      }
    }
  }
</style>

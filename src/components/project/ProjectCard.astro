---
import type { CollectionEntry } from "astro:content";

import { cached } from "@/utils/cache";
import { getStars, isGithubUrl, parseGithubUrl } from "@/utils/github/helpers";

import ProjectCardHeader from "./ProjectCardHeader.astro";
import ProjectCardInfoLine from "./ProjectCardInfoLine.astro";

interface Props {
  project: CollectionEntry<"project">;
  fullsize?: boolean;
}

const { project, fullsize = false } = Astro.props;

const {
  links: { repository },
} = project.data;

let stars: number | undefined;
if (repository && isGithubUrl(repository)) {
  const { owner, repo } = parseGithubUrl(repository);

  const cachekey = `stars/${repository.slice(repository.lastIndexOf("/"))}`;
  stars = await cached(cachekey, () => getStars(owner, repo)).catch(
    () => undefined,
  );
}
---

<article class="container:inline-size">
  <ProjectCardHeader slug={project.slug} {...project.data} />
  <p class="fs-fluid-0">{project.data.description}</p>
  <ProjectCardInfoLine
    slug={fullsize && project.slug}
    stars={stars}
    repository={repository}
  />
</article>

<style lang="scss">
  p {
    margin-block: 0.5rem;
    max-width: 65ch;
    color: var(--color-text-secondary);
  }
</style>

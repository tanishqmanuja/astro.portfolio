---
import LinkIcon from "@astropub/icons/Link2";
import StarIcon from "@astropub/icons/StarFilled";

import { slugify } from "@/utils/slug";

interface Props {
  stars?: number;
  repository?: string;
  slug?: string | boolean;
}

const { stars, repository, slug } = Astro.props;
---

<ul class="infoline | cluster">
  {
    stars && stars > 0 && (
      <li class="infoline__item stars">
        <StarIcon size="12" class="amber" />
        <span>{stars} stars</span>
      </li>
    )
  }

  {
    repository && (
      <li class="infoline__item repository">
        <a
          class="primary-selectable"
          href={repository}
          title="Visit Repository"
          target="_blank"
          rel="noopener noreferrer"
        >
          <LinkIcon size="12" />
          <span>Repository</span>
        </a>
      </li>
    )
  }

  {
    !(repository || stars) && typeof slug === "string" && (
      <li class="infoline__item">
        <a
          class="primary-selectable"
          href={`/${slugify(slug)}/`}
          title="Read more"
        >
          <span>More Info</span>
          <span class="symbol">Â»</span>
        </a>
      </li>
    )
  }
</ul>

<style lang="scss">
  .infoline {
    gap: 1ch;

    text-transform: uppercase;
    font-family: var(--ff-pixelated);
    font-size: var(--fs-pixelated-small);

    &__item {
      &,
      & > a {
        display: flex;
        align-items: center;
        gap: 1ch;
      }

      .symbol {
        color: var(--color-text-subdued);
        transition: color 0.2s ease-in-out;
      }

      &:is(:hover, :active, :focus-within) {
        .symbol {
          color: var(--color-text-secondary);
        }
      }
    }

    &__item + &__item {
      &::before {
        content: "|";
        color: var(--color-text-subdued);
        opacity: 0.75;
      }
    }
  }
</style>
